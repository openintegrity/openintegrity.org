{"version":3,"sources":["../../../../../../../content/design/mockup/semantic/tasks/docs/build.js"],"names":[],"mappings":";;;;AAIA;EACE,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC;;;EAG9B,aAAa,EAAE,OAAO,CAAC,gBAAgB,CAAC;EACxC,aAAa,EAAE,OAAO,CAAC,IAAI,CAAC;EAC5B,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC;;;EAGpC,aAAa,EAAE,OAAO,CAAC,mBAAmB,CAAC;EAC3C,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC;EACpC,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC;EACpC,aAAa,EAAE,OAAO,CAAC,cAAc,CAAC;EACtC,aAAa,EAAE,OAAO,CAAC,SAAS,CAAC;EACjC,aAAa,EAAE,OAAO,CAAC,aAAa,CAAC;EACrC,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC;EACnC,aAAa,EAAE,OAAO,CAAC,iBAAiB,CAAC;EACzC,aAAa,EAAE,OAAO,CAAC,cAAc,CAAC;EACtC,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC;EACpC,aAAa,EAAE,OAAO,CAAC,aAAa,CAAC;EACrC,aAAa,EAAE,OAAO,CAAC,cAAc,CAAC;EACtC,aAAa,EAAE,OAAO,CAAC,aAAa,CAAC;;;EAGrC,aAAa,EAAE,OAAO,CAAC,gBAAgB,CAAC;;;EAGxC,aAAa,EAAE,OAAO,CAAC,iBAAiB,CAAC;EACzC,aAAa,EAAE,OAAO,CAAC,0BAA0B,CAAC;EAClD,aAAa,EAAE,OAAO,CAAC,2BAA2B,CAAC;;;EAGnD,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC;;;EAGpC,KAAK;EACL,MAAM;EACN,MAAM;EACN,MAAM;;EAEN,aAAa,EAAE,KAAK,CAAC,MAAM;EAC3B,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ;EACpC,aAAa,EAAE,KAAK,CAAC,GAAG;EACxB,aAAa,EAAE,KAAK,CAAC;AACvB;;;AAGA,OAAO,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC;;AAExC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE;;EAElC;IACE,MAAM;IACN,gBAAgB;IAChB;EACF;;;EAGA,OAAO,EAAE,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC;;;EAG7C,OAAO,EAAE,MAAM,CAAC,KAAK;EACrB,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM;EAC5B,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM;EAC5B,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM;;;;;;;;;;EAU5B,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC;EACjC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG;IAC5C,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC1B,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;MACpB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5F,CAAC;EACH;;;;;;EAMA,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC;;EAEhC,IAAI,CAAC,GAAG,CAAC,iBAAiB;IACxB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;IAChC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;EAC1B;;;;;;EAMA,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC;;EAEnC,IAAI,CAAC,GAAG,CAAC,YAAY;IACnB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAC5B,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;EAC1B;;;;;;EAMA,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC;;EAE1C,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE;IACvB,OAAO,CAAC,KAAK,CAAC,2DAA2D,CAAC;IAC1E,MAAM;EACR;;;EAGA,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK,CAAC,WAAW,EAAE,OAAO;IACxE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACf,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;IACzB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;IACnC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACjB;;;EAGA,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EACzC,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzC;IACE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACf,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC;IAC5D,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;IACpD,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;IACpD,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;IAClD,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC;IACjD,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;IACrC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;IACpC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;IACxB,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;MACpB,IAAI,CAAC,KAAK,CAAC,+BAA+B,CAAC;IAC7C,CAAC;EACH;;EAEA,iBAAiB,EAAE;IACjB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACf,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACb,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC;IAC/C,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;IAChC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;IACpC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;IACrC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;IAClC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;IACxB,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;MACpB,QAAQ,CAAC,CAAC;MACV,IAAI,CAAC,KAAK,CAAC,6BAA6B,CAAC;IAC3C,CAAC;EACH;;;EAGA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,iBAAiB,EAAE,KAAK,CAAC,WAAW,EAAE,QAAQ;IACrE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;EAChC;;;EAGA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK;IAC7D,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACf,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACf,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;IACpC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;IACxB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC7B,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;IACnC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;IACrC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;IAClC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;IACxB,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;MACpB,IAAI,CAAC,KAAK,CAAC,4BAA4B,CAAC;MACxC,IAAI,CAAC,KAAK,CAAC,8BAA8B,CAAC;IAC5C,CAAC;EACH;;AAEF,CAAC","file":"build.js","sourcesContent":["/*******************************\n           Build Docs\n*******************************/\n\nvar\n  gulp         = require('gulp'),\n\n  // node dependencies\n  console      = require('better-console'),\n  fs           = require('fs'),\n  map          = require('map-stream'),\n\n  // gulp dependencies\n  autoprefixer = require('gulp-autoprefixer'),\n  chmod        = require('gulp-chmod'),\n  clone        = require('gulp-clone'),\n  flatten      = require('gulp-flatten'),\n  gulpif       = require('gulp-if'),\n  header       = require('gulp-header'),\n  less         = require('gulp-less'),\n  minifyCSS    = require('gulp-minify-css'),\n  plumber      = require('gulp-plumber'),\n  print        = require('gulp-print'),\n  rename       = require('gulp-rename'),\n  replace      = require('gulp-replace'),\n  uglify       = require('gulp-uglify'),\n\n  // user config\n  config       = require('../config/docs'),\n\n  // install config\n  tasks        = require('../config/tasks'),\n  configSetup  = require('../config/project/config'),\n  install      = require('../config/project/install'),\n\n  // metadata parsing\n  metadata     = require('./metadata'),\n\n  // shorthand\n  globs,\n  assets,\n  output,\n  source,\n\n  banner       = tasks.banner,\n  comments     = tasks.regExp.comments,\n  log          = tasks.log,\n  settings     = tasks.settings\n;\n\n// add internal tasks (concat release)\nrequire('../collections/internal')(gulp);\n\nmodule.exports = function(callback) {\n\n  var\n    stream,\n    compressedStream,\n    uncompressedStream\n  ;\n\n  // use a different config\n  config = configSetup.addDerivedValues(config);\n\n  // shorthand\n  globs  = config.globs;\n  assets = config.paths.assets;\n  output = config.paths.output;\n  source = config.paths.source;\n\n  /*--------------\n   Parse metadata\n   ---------------*/\n\n  // parse all *.html.eco in docs repo, data will end up in\n  // metadata.result object.  Note this assumes that the docs\n  // repository is present and in proper directory location as\n  // specified by docs.json.\n  console.info('Building Metadata');\n  gulp.src(config.paths.template.eco + globs.eco)\n    .pipe(map(metadata.parser))\n    .on('end', function() {\n      fs.writeFile(output.metadata + '/metadata.json', JSON.stringify(metadata.result, null, 2));\n    })\n  ;\n\n  /*--------------\n    Copy Examples\n  ---------------*/\n\n  console.info('Copying examples');\n  // copy src/ to server\n  gulp.src('examples/**/*.*')\n    .pipe(gulp.dest(output.examples))\n    .pipe(print(log.created))\n  ;\n\n  /*--------------\n     Copy Source\n  ---------------*/\n\n  console.info('Copying LESS source');\n  // copy src/ to server\n  gulp.src('src/**/*.*')\n    .pipe(gulp.dest(output.less))\n    .pipe(print(log.created))\n  ;\n\n  /*--------------\n        Build\n  ---------------*/\n\n  console.info('Building Semantic for docs');\n\n  if( !install.isSetup() ) {\n    console.error('Cannot build files. Run \"gulp install\" to set-up Semantic');\n    return;\n  }\n\n  // unified css stream\n  stream = gulp.src(source.definitions + '/**/' + globs.components + '.less')\n    .pipe(plumber())\n    .pipe(less(settings.less))\n    .pipe(autoprefixer(settings.prefix))\n    .pipe(flatten())\n  ;\n\n  // two concurrent streams from same source to concat release\n  uncompressedStream = stream.pipe(clone());\n  compressedStream   = stream.pipe(clone());\n\n  uncompressedStream\n    .pipe(plumber())\n    .pipe(replace(comments.variables.in, comments.variables.out))\n    .pipe(replace(comments.large.in, comments.large.out))\n    .pipe(replace(comments.small.in, comments.small.out))\n    .pipe(replace(comments.tiny.in, comments.tiny.out))\n    .pipe(replace(assets.source, assets.uncompressed))\n    .pipe(header(banner, settings.header))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(gulp.dest(output.uncompressed))\n    .pipe(print(log.created))\n    .on('end', function() {\n      gulp.start('package uncompressed docs css');\n    })\n  ;\n\n  compressedStream = stream\n    .pipe(plumber())\n    .pipe(clone())\n    .pipe(replace(assets.source, assets.compressed))\n    .pipe(minifyCSS(settings.minify))\n    .pipe(rename(settings.rename.minCSS))\n    .pipe(header(banner, settings.header))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(gulp.dest(output.compressed))\n    .pipe(print(log.created))\n    .on('end', function() {\n      callback();\n      gulp.start('package compressed docs css');\n    })\n  ;\n\n  // copy assets\n  gulp.src(source.themes + '/**/assets/**/' + globs.components + '?(s).*')\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(gulp.dest(output.themes))\n  ;\n\n  // copy source javascript\n  gulp.src(source.definitions + '/**/' + globs.components + '.js')\n    .pipe(plumber())\n    .pipe(flatten())\n    .pipe(gulp.dest(output.uncompressed))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(print(log.created))\n    .pipe(uglify(settings.uglify))\n    .pipe(rename(settings.rename.minJS))\n    .pipe(header(banner, settings.header))\n    .pipe(gulp.dest(output.compressed))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(print(log.created))\n    .on('end', function() {\n      gulp.start('package compressed docs js');\n      gulp.start('package uncompressed docs js');\n    })\n  ;\n\n};\n"]}