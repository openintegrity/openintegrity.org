{"version":3,"sources":["../../../../../../../../content/design/mockup/semantic/tasks/config/project/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["/*******************************\n            Set-up\n*******************************/\n\nvar\n  extend   = require('extend'),\n  fs       = require('fs'),\n  path     = require('path'),\n\n  defaults = require('../defaults')\n;\n\n\n/*******************************\n            Exports\n*******************************/\n\nmodule.exports = {\n\n  getPath: function(file, directory) {\n    var\n      configPath,\n      walk = function(directory) {\n        var\n          nextDirectory = path.resolve( path.join(directory, path.sep, '..') ),\n          currentPath   = path.normalize( path.join(directory, file) )\n        ;\n        if( fs.existsSync(currentPath) ) {\n          // found file\n          configPath = path.normalize(directory);\n          return;\n        }\n        else {\n          // reached file system root, let's stop\n          if(nextDirectory == directory) {\n            return;\n          }\n          // otherwise recurse\n          walk(nextDirectory, file);\n        }\n      }\n    ;\n\n    // start walk from outside require-dot-files directory\n    file      = file || defaults.files.config;\n    directory = directory || path.join(__dirname, path.sep, '..');\n    walk(directory);\n    return configPath || '';\n  },\n\n  // adds additional derived values to a config object\n  addDerivedValues: function(config) {\n\n    config = config || extend(false, {}, defaults);\n\n    /*--------------\n       File Paths\n    ---------------*/\n\n    var\n      configPath = this.getPath(),\n      sourcePaths = {},\n      outputPaths = {},\n      folder\n    ;\n\n    // resolve paths (config location + base + path)\n    for(folder in config.paths.source) {\n      if(config.paths.source.hasOwnProperty(folder)) {\n        sourcePaths[folder] = path.resolve(path.join(configPath, config.base, config.paths.source[folder]));\n      }\n    }\n    for(folder in config.paths.output) {\n      if(config.paths.output.hasOwnProperty(folder)) {\n        outputPaths[folder] = path.resolve(path.join(configPath, config.base, config.paths.output[folder]));\n      }\n    }\n\n    // set config paths to full paths\n    config.paths.source = sourcePaths;\n    config.paths.output = outputPaths;\n\n    // resolve \"clean\" command path\n    config.paths.clean = path.resolve( path.join(configPath, config.base, config.paths.clean) );\n\n    /*--------------\n        CSS URLs\n    ---------------*/\n\n    // determine asset paths in css by finding relative path between themes and output\n    // force forward slashes\n\n    config.paths.assets = {\n      source       : '../../themes', // source asset path is always the same\n      uncompressed : path.relative(config.paths.output.uncompressed, config.paths.output.themes).replace(/\\\\/g,'/'),\n      compressed   : path.relative(config.paths.output.compressed, config.paths.output.themes).replace(/\\\\/g,'/'),\n      packaged     : path.relative(config.paths.output.packaged, config.paths.output.themes).replace(/\\\\/g,'/')\n    };\n\n\n    /*--------------\n       Permission\n    ---------------*/\n\n    if(config.permission) {\n      config.hasPermissions = true;\n    }\n    else {\n      // pass blank object to avoid causing errors\n      config.permission     = {};\n      config.hasPermissions = false;\n    }\n\n    /*--------------\n         Globs\n    ---------------*/\n\n    if(!config.globs) {\n      config.globs = {};\n    }\n\n    // remove duplicates from component array\n    if(config.components instanceof Array) {\n      config.components = config.components.filter(function(component, index) {\n        return config.components.indexOf(component) == index;\n      });\n    }\n\n    // takes component object and creates file glob matching selected components\n    config.globs.components = (typeof config.components == 'object')\n      ? (config.components.length > 1)\n        ? '{' + config.components.join(',') + '}'\n        : config.components[0]\n      : '{' + defaults.components.join(',') + '}'\n    ;\n\n    return config;\n\n  }\n\n};\n\n"]}