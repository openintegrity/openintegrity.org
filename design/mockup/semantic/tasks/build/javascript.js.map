{"version":3,"sources":["../../../../../../../content/design/mockup/semantic/tasks/build/javascript.js"],"names":[],"mappings":"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","file":"javascript.js","sourcesContent":["/*******************************\n          Build Task\n*******************************/\n\nvar\n  gulp         = require('gulp'),\n\n  // node dependencies\n  console      = require('better-console'),\n  fs           = require('fs'),\n\n  // gulp dependencies\n  chmod        = require('gulp-chmod'),\n  flatten      = require('gulp-flatten'),\n  gulpif       = require('gulp-if'),\n  plumber      = require('gulp-plumber'),\n  print        = require('gulp-print'),\n  rename       = require('gulp-rename'),\n  replace      = require('gulp-replace'),\n  uglify       = require('gulp-uglify'),\n\n  // config\n  config       = require('../config/user'),\n  tasks        = require('../config/tasks'),\n  install      = require('../config/project/install'),\n\n  // shorthand\n  globs        = config.globs,\n  assets       = config.paths.assets,\n  output       = config.paths.output,\n  source       = config.paths.source,\n\n  banner       = tasks.banner,\n  comments     = tasks.regExp.comments,\n  log          = tasks.log,\n  settings     = tasks.settings\n;\n\n// add internal tasks (concat release)\nrequire('../collections/internal')(gulp);\n\nmodule.exports = function(callback) {\n\n  var\n    stream,\n    compressedStream,\n    uncompressedStream\n  ;\n\n  console.info('Building Javascript');\n\n  if( !install.isSetup() ) {\n    console.error('Cannot build files. Run \"gulp install\" to set-up Semantic');\n    return;\n  }\n\n  // copy source javascript\n  gulp.src(source.definitions + '/**/' + globs.components + '.js')\n    .pipe(plumber())\n    .pipe(flatten())\n    .pipe(replace(comments.license.in, comments.license.out))\n    .pipe(gulp.dest(output.uncompressed))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(print(log.created))\n    .pipe(uglify(settings.uglify))\n    .pipe(rename(settings.rename.minJS))\n    .pipe(gulp.dest(output.compressed))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(print(log.created))\n    .on('end', function() {\n      gulp.start('package compressed js');\n      gulp.start('package uncompressed js');\n      callback();\n    })\n  ;\n\n};"]}